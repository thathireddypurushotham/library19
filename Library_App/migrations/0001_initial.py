# Generated by Django 3.2.2 on 2021-06-16 01:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Books_Avail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Book_name', models.CharField(max_length=120, unique=True)),
                ('Book_author', models.CharField(default='', max_length=120)),
                ('Book_Edition', models.CharField(default='', max_length=120)),
                ('Book_count', models.IntegerField(default=0)),
                ('Book_Updatedcount', models.IntegerField(default=0)),
                ('Book_Rem', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Library_App_books_avail',
            },
        ),
        migrations.CreateModel(
            name='ComplaintBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_name', models.CharField(max_length=120)),
                ('p_email', models.EmailField(max_length=120)),
                ('p_complaint', models.CharField(max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.IntegerField(choices=[(1, 'student'), (2, 'guest'), (3, 'Staff')], default=2)),
                ('age', models.IntegerField(default=10)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='F', max_length=10)),
                ('impf', models.ImageField(default='profile.jpg', upload_to='profiles/')),
                ('Rg_No', models.CharField(default='', max_length=120)),
                ('Branch', models.CharField(choices=[('CSE', 'CSE'), ('ECE', 'ECE'), ('CIVIL', 'CIVIL'), ('Mechanical', 'Mechanical'), ('EEE', 'EEE'), ('MBA', 'MBA')], default='', max_length=120)),
                ('phone_no', models.CharField(default='1234567890', max_length=10, null=True)),
                ('address', models.CharField(default='Tirupathi', max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='st_admin_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rg_No', models.CharField(max_length=120)),
                ('Branch', models.CharField(max_length=120)),
                ('Name', models.CharField(max_length=120)),
                ('issue_status', models.IntegerField(default=0)),
                ('Book_name', models.CharField(max_length=120)),
                ('Book_author', models.CharField(max_length=120)),
                ('Book_Edition', models.CharField(default='', max_length=120)),
                ('Book_count', models.IntegerField(default=0)),
                ('Issue_date', models.DateField(blank=True, null=True)),
                ('Expire_date', models.DateField(blank=True, null=True)),
                ('Return_Date', models.DateField(blank=True, null=True)),
                ('Fine', models.IntegerField(default=0)),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(default=10)),
                ('impf', models.ImageField(default='profile.png', upload_to='Profiles/')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='Male', max_length=10)),
                ('uid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
